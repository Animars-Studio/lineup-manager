scalar DateTime

type Error {
  message: String!
}

type CustomError {
  error: Error
}

type GenericResult {
  result: String
}

type User {
  id: ID!
  email: String!
  username: String
  isConfirmed: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

union CustomGraphQlResult = GenericResult | CustomError
union SignupResult = User | CustomError

type Query {
  hello: String
}

type Mutation {
  login(username: String!, password: String!): CustomGraphQlResult
  signup(email: String!, password: String!): SignupResult
  confirmSignup(username: String!, code: String!): CustomGraphQlResult
  resendConfirmationCode(username: String!): CustomGraphQlResult
}
